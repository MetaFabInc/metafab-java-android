/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.4.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class UpgradeContractTrustedForwarderRequest {
  
  @SerializedName("forwarderAddress")
  private String forwarderAddress = null;

  /**
   * A ERC2771 forwarder smart contract address to assign as the new trusted forwarder of the target smart contract.
   **/
  @ApiModelProperty(required = true, value = "A ERC2771 forwarder smart contract address to assign as the new trusted forwarder of the target smart contract.")
  public String getForwarderAddress() {
    return forwarderAddress;
  }
  public void setForwarderAddress(String forwarderAddress) {
    this.forwarderAddress = forwarderAddress;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradeContractTrustedForwarderRequest upgradeContractTrustedForwarderRequest = (UpgradeContractTrustedForwarderRequest) o;
    return (this.forwarderAddress == null ? upgradeContractTrustedForwarderRequest.forwarderAddress == null : this.forwarderAddress.equals(upgradeContractTrustedForwarderRequest.forwarderAddress));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.forwarderAddress == null ? 0: this.forwarderAddress.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradeContractTrustedForwarderRequest {\n");
    
    sb.append("  forwarderAddress: ").append(forwarderAddress).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
