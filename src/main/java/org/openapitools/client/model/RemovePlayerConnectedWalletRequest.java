/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RemovePlayerConnectedWalletRequest {
  
  @SerializedName("address")
  private String address = null;
  @SerializedName("nonce")
  private Integer nonce = null;
  @SerializedName("signature")
  private String signature = null;
  public enum ChainEnum {
     ETHEREUM,  GOERLI,  MATIC,  MATICMUMBAI,  ARBITRUM,  ARBITRUMGOERLI, 
  };
  @SerializedName("chain")
  private ChainEnum chain = null;

  /**
   * The address of the external wallet to remove from a player.
   **/
  @ApiModelProperty(required = true, value = "The address of the external wallet to remove from a player.")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }

  /**
   * Any positive integer that hasn't been used previously to connect or disconnect this external wallet. Must be the same nonce used to generate the `signature`.
   **/
  @ApiModelProperty(required = true, value = "Any positive integer that hasn't been used previously to connect or disconnect this external wallet. Must be the same nonce used to generate the `signature`.")
  public Integer getNonce() {
    return nonce;
  }
  public void setNonce(Integer nonce) {
    this.nonce = nonce;
  }

  /**
   * A signature string generated by signing a keccak256 hash generated with abiCoder encode arguments of `[ 'bytes32', 'address', 'bool', 'address', 'uint256' ]` and `[ keccak256(gameId), delegate wallet unapproved (player's custodial wallet address), false, external wallet address, any unused nonce number ]`.
   **/
  @ApiModelProperty(required = true, value = "A signature string generated by signing a keccak256 hash generated with abiCoder encode arguments of `[ 'bytes32', 'address', 'bool', 'address', 'uint256' ]` and `[ keccak256(gameId), delegate wallet unapproved (player's custodial wallet address), false, external wallet address, any unused nonce number ]`.")
  public String getSignature() {
    return signature;
  }
  public void setSignature(String signature) {
    this.signature = signature;
  }

  /**
   * The blockchain you want to remove this wallet connection on. If you need to remove it on multiple blockchains, make multiple requests using different `chain` arguments. Support for new blockchains are added over time.
   **/
  @ApiModelProperty(required = true, value = "The blockchain you want to remove this wallet connection on. If you need to remove it on multiple blockchains, make multiple requests using different `chain` arguments. Support for new blockchains are added over time.")
  public ChainEnum getChain() {
    return chain;
  }
  public void setChain(ChainEnum chain) {
    this.chain = chain;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemovePlayerConnectedWalletRequest removePlayerConnectedWalletRequest = (RemovePlayerConnectedWalletRequest) o;
    return (this.address == null ? removePlayerConnectedWalletRequest.address == null : this.address.equals(removePlayerConnectedWalletRequest.address)) &&
        (this.nonce == null ? removePlayerConnectedWalletRequest.nonce == null : this.nonce.equals(removePlayerConnectedWalletRequest.nonce)) &&
        (this.signature == null ? removePlayerConnectedWalletRequest.signature == null : this.signature.equals(removePlayerConnectedWalletRequest.signature)) &&
        (this.chain == null ? removePlayerConnectedWalletRequest.chain == null : this.chain.equals(removePlayerConnectedWalletRequest.chain));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.nonce == null ? 0: this.nonce.hashCode());
    result = 31 * result + (this.signature == null ? 0: this.signature.hashCode());
    result = 31 * result + (this.chain == null ? 0: this.chain.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemovePlayerConnectedWalletRequest {\n");
    
    sb.append("  address: ").append(address).append("\n");
    sb.append("  nonce: ").append(nonce).append("\n");
    sb.append("  signature: ").append(signature).append("\n");
    sb.append("  chain: ").append(chain).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
