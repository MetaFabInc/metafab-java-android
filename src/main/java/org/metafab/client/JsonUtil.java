/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.metafab.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ApproveEcosystemGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApproveEcosystemGameRequest>>(){}.getType();
    }
    
    if ("AuthGame200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthGame200Response>>(){}.getType();
    }
    
    if ("AuthGame200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthGame200ResponseAllOf>>(){}.getType();
    }
    
    if ("AuthPlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthPlayer200Response>>(){}.getType();
    }
    
    if ("AuthPlayer200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthPlayer200ResponseAllOf>>(){}.getType();
    }
    
    if ("AuthProfile200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AuthProfile200Response>>(){}.getType();
    }
    
    if ("BatchMintCollectionItemsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchMintCollectionItemsRequest>>(){}.getType();
    }
    
    if ("BatchTransferCollectionItemsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchTransferCollectionItemsRequest>>(){}.getType();
    }
    
    if ("BatchTransferCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchTransferCurrencyRequest>>(){}.getType();
    }
    
    if ("BurnCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BurnCollectionItemRequest>>(){}.getType();
    }
    
    if ("BurnCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<BurnCurrencyRequest>>(){}.getType();
    }
    
    if ("CollectionItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionItem>>(){}.getType();
    }
    
    if ("CollectionItemAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionItemAttributesInner>>(){}.getType();
    }
    
    if ("CollectionItemAttributesInnerValue".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionItemAttributesInnerValue>>(){}.getType();
    }
    
    if ("CollectionModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CollectionModel>>(){}.getType();
    }
    
    if ("ContractModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContractModel>>(){}.getType();
    }
    
    if ("CreateCollection200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollection200Response>>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollection200ResponseAllOf>>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOfContract".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollection200ResponseAllOfContract>>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOfContractAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollection200ResponseAllOfContractAllOf>>(){}.getType();
    }
    
    if ("CreateCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollectionItemRequest>>(){}.getType();
    }
    
    if ("CreateCollectionItemRequestAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollectionItemRequestAttributesInner>>(){}.getType();
    }
    
    if ("CreateCollectionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCollectionRequest>>(){}.getType();
    }
    
    if ("CreateContractRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateContractRequest>>(){}.getType();
    }
    
    if ("CreateCurrency200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCurrency200Response>>(){}.getType();
    }
    
    if ("CreateCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateCurrencyRequest>>(){}.getType();
    }
    
    if ("CreateEcosystemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateEcosystemRequest>>(){}.getType();
    }
    
    if ("CreateGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateGameRequest>>(){}.getType();
    }
    
    if ("CreateLootboxManager200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateLootboxManager200Response>>(){}.getType();
    }
    
    if ("CreateLootboxManagerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateLootboxManagerRequest>>(){}.getType();
    }
    
    if ("CreatePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreatePlayerRequest>>(){}.getType();
    }
    
    if ("CreateProfilePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateProfilePlayerRequest>>(){}.getType();
    }
    
    if ("CreateProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateProfileRequest>>(){}.getType();
    }
    
    if ("CreateShop200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateShop200Response>>(){}.getType();
    }
    
    if ("CreateShopRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateShopRequest>>(){}.getType();
    }
    
    if ("CreateWalletSignatureRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateWalletSignatureRequest>>(){}.getType();
    }
    
    if ("CurrencyModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrencyModel>>(){}.getType();
    }
    
    if ("EcosystemGameModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<EcosystemGameModel>>(){}.getType();
    }
    
    if ("EcosystemModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<EcosystemModel>>(){}.getType();
    }
    
    if ("GameModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<GameModel>>(){}.getType();
    }
    
    if ("GetCollections200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCollections200ResponseInner>>(){}.getType();
    }
    
    if ("GetCollections200ResponseInnerAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCollections200ResponseInnerAllOf>>(){}.getType();
    }
    
    if ("GetCurrencies200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCurrencies200ResponseInner>>(){}.getType();
    }
    
    if ("GetCurrencyFees200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCurrencyFees200Response>>(){}.getType();
    }
    
    if ("GetLootboxManagers200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetLootboxManagers200ResponseInner>>(){}.getType();
    }
    
    if ("GetPlayerData200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPlayerData200Response>>(){}.getType();
    }
    
    if ("GetProfileGames200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetProfileGames200ResponseInner>>(){}.getType();
    }
    
    if ("GetShops200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetShops200ResponseInner>>(){}.getType();
    }
    
    if ("GrantCollectionRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GrantCollectionRoleRequest>>(){}.getType();
    }
    
    if ("GrantCurrencyRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GrantCurrencyRoleRequest>>(){}.getType();
    }
    
    if ("LootboxManagerLootbox".equalsIgnoreCase(className)) {
      return new TypeToken<List<LootboxManagerLootbox>>(){}.getType();
    }
    
    if ("LootboxManagerModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<LootboxManagerModel>>(){}.getType();
    }
    
    if ("MintCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<MintCollectionItemRequest>>(){}.getType();
    }
    
    if ("MintCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<MintCurrencyRequest>>(){}.getType();
    }
    
    if ("PlayerModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<PlayerModel>>(){}.getType();
    }
    
    if ("ProfileModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProfileModel>>(){}.getType();
    }
    
    if ("ProfilePermissionsValue".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProfilePermissionsValue>>(){}.getType();
    }
    
    if ("PublicEcosystem".equalsIgnoreCase(className)) {
      return new TypeToken<List<PublicEcosystem>>(){}.getType();
    }
    
    if ("PublicGame".equalsIgnoreCase(className)) {
      return new TypeToken<List<PublicGame>>(){}.getType();
    }
    
    if ("PublicPlayer".equalsIgnoreCase(className)) {
      return new TypeToken<List<PublicPlayer>>(){}.getType();
    }
    
    if ("PublicPlayerCustodialWallet".equalsIgnoreCase(className)) {
      return new TypeToken<List<PublicPlayerCustodialWallet>>(){}.getType();
    }
    
    if ("PublicProfile".equalsIgnoreCase(className)) {
      return new TypeToken<List<PublicProfile>>(){}.getType();
    }
    
    if ("RemovePlayerConnectedWalletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<RemovePlayerConnectedWalletRequest>>(){}.getType();
    }
    
    if ("RevokeCollectionRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<RevokeCollectionRoleRequest>>(){}.getType();
    }
    
    if ("SetCollectionApprovalRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetCollectionApprovalRequest>>(){}.getType();
    }
    
    if ("SetCollectionItemTimelockRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetCollectionItemTimelockRequest>>(){}.getType();
    }
    
    if ("SetCurrencyFeesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetCurrencyFeesRequest>>(){}.getType();
    }
    
    if ("SetLootboxManagerLootboxRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetLootboxManagerLootboxRequest>>(){}.getType();
    }
    
    if ("SetPlayerConnectedWallet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetPlayerConnectedWallet200Response>>(){}.getType();
    }
    
    if ("SetPlayerConnectedWalletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetPlayerConnectedWalletRequest>>(){}.getType();
    }
    
    if ("SetPlayerDataRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetPlayerDataRequest>>(){}.getType();
    }
    
    if ("SetShopOfferRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetShopOfferRequest>>(){}.getType();
    }
    
    if ("ShopModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShopModel>>(){}.getType();
    }
    
    if ("ShopOffer".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShopOffer>>(){}.getType();
    }
    
    if ("TransactionModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionModel>>(){}.getType();
    }
    
    if ("TransferCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransferCollectionItemRequest>>(){}.getType();
    }
    
    if ("TransferContractOwnershipRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransferContractOwnershipRequest>>(){}.getType();
    }
    
    if ("TransferCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransferCurrencyRequest>>(){}.getType();
    }
    
    if ("UpdateEcosystemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateEcosystemRequest>>(){}.getType();
    }
    
    if ("UpdateGame200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGame200Response>>(){}.getType();
    }
    
    if ("UpdateGame200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGame200ResponseAllOf>>(){}.getType();
    }
    
    if ("UpdateGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGameRequest>>(){}.getType();
    }
    
    if ("UpdatePlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePlayer200Response>>(){}.getType();
    }
    
    if ("UpdatePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePlayerRequest>>(){}.getType();
    }
    
    if ("UpdateProfilePlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateProfilePlayer200Response>>(){}.getType();
    }
    
    if ("UpdateProfilePlayer200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateProfilePlayer200ResponseAllOf>>(){}.getType();
    }
    
    if ("UpdateProfilePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateProfilePlayerRequest>>(){}.getType();
    }
    
    if ("UpdateProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateProfileRequest>>(){}.getType();
    }
    
    if ("UpgradeContractTrustedForwarderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpgradeContractTrustedForwarderRequest>>(){}.getType();
    }
    
    if ("WalletModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<WalletModel>>(){}.getType();
    }
    
    if ("WithdrawFromShopRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithdrawFromShopRequest>>(){}.getType();
    }
    
    if ("WriteContractRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<WriteContractRequest>>(){}.getType();
    }
    
    if ("WriteContractRequestArgsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<WriteContractRequestArgsInner>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("ApproveEcosystemGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ApproveEcosystemGameRequest>(){}.getType();
    }
    
    if ("AuthGame200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AuthGame200Response>(){}.getType();
    }
    
    if ("AuthGame200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<AuthGame200ResponseAllOf>(){}.getType();
    }
    
    if ("AuthPlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AuthPlayer200Response>(){}.getType();
    }
    
    if ("AuthPlayer200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<AuthPlayer200ResponseAllOf>(){}.getType();
    }
    
    if ("AuthProfile200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AuthProfile200Response>(){}.getType();
    }
    
    if ("BatchMintCollectionItemsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BatchMintCollectionItemsRequest>(){}.getType();
    }
    
    if ("BatchTransferCollectionItemsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BatchTransferCollectionItemsRequest>(){}.getType();
    }
    
    if ("BatchTransferCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BatchTransferCurrencyRequest>(){}.getType();
    }
    
    if ("BurnCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BurnCollectionItemRequest>(){}.getType();
    }
    
    if ("BurnCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<BurnCurrencyRequest>(){}.getType();
    }
    
    if ("CollectionItem".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionItem>(){}.getType();
    }
    
    if ("CollectionItemAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionItemAttributesInner>(){}.getType();
    }
    
    if ("CollectionItemAttributesInnerValue".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionItemAttributesInnerValue>(){}.getType();
    }
    
    if ("CollectionModel".equalsIgnoreCase(className)) {
      return new TypeToken<CollectionModel>(){}.getType();
    }
    
    if ("ContractModel".equalsIgnoreCase(className)) {
      return new TypeToken<ContractModel>(){}.getType();
    }
    
    if ("CreateCollection200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollection200Response>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollection200ResponseAllOf>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOfContract".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollection200ResponseAllOfContract>(){}.getType();
    }
    
    if ("CreateCollection200ResponseAllOfContractAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollection200ResponseAllOfContractAllOf>(){}.getType();
    }
    
    if ("CreateCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollectionItemRequest>(){}.getType();
    }
    
    if ("CreateCollectionItemRequestAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollectionItemRequestAttributesInner>(){}.getType();
    }
    
    if ("CreateCollectionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCollectionRequest>(){}.getType();
    }
    
    if ("CreateContractRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateContractRequest>(){}.getType();
    }
    
    if ("CreateCurrency200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCurrency200Response>(){}.getType();
    }
    
    if ("CreateCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateCurrencyRequest>(){}.getType();
    }
    
    if ("CreateEcosystemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateEcosystemRequest>(){}.getType();
    }
    
    if ("CreateGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateGameRequest>(){}.getType();
    }
    
    if ("CreateLootboxManager200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CreateLootboxManager200Response>(){}.getType();
    }
    
    if ("CreateLootboxManagerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateLootboxManagerRequest>(){}.getType();
    }
    
    if ("CreatePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreatePlayerRequest>(){}.getType();
    }
    
    if ("CreateProfilePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateProfilePlayerRequest>(){}.getType();
    }
    
    if ("CreateProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateProfileRequest>(){}.getType();
    }
    
    if ("CreateShop200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CreateShop200Response>(){}.getType();
    }
    
    if ("CreateShopRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateShopRequest>(){}.getType();
    }
    
    if ("CreateWalletSignatureRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateWalletSignatureRequest>(){}.getType();
    }
    
    if ("CurrencyModel".equalsIgnoreCase(className)) {
      return new TypeToken<CurrencyModel>(){}.getType();
    }
    
    if ("EcosystemGameModel".equalsIgnoreCase(className)) {
      return new TypeToken<EcosystemGameModel>(){}.getType();
    }
    
    if ("EcosystemModel".equalsIgnoreCase(className)) {
      return new TypeToken<EcosystemModel>(){}.getType();
    }
    
    if ("GameModel".equalsIgnoreCase(className)) {
      return new TypeToken<GameModel>(){}.getType();
    }
    
    if ("GetCollections200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetCollections200ResponseInner>(){}.getType();
    }
    
    if ("GetCollections200ResponseInnerAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<GetCollections200ResponseInnerAllOf>(){}.getType();
    }
    
    if ("GetCurrencies200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetCurrencies200ResponseInner>(){}.getType();
    }
    
    if ("GetCurrencyFees200Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetCurrencyFees200Response>(){}.getType();
    }
    
    if ("GetLootboxManagers200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetLootboxManagers200ResponseInner>(){}.getType();
    }
    
    if ("GetPlayerData200Response".equalsIgnoreCase(className)) {
      return new TypeToken<GetPlayerData200Response>(){}.getType();
    }
    
    if ("GetProfileGames200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetProfileGames200ResponseInner>(){}.getType();
    }
    
    if ("GetShops200ResponseInner".equalsIgnoreCase(className)) {
      return new TypeToken<GetShops200ResponseInner>(){}.getType();
    }
    
    if ("GrantCollectionRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GrantCollectionRoleRequest>(){}.getType();
    }
    
    if ("GrantCurrencyRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GrantCurrencyRoleRequest>(){}.getType();
    }
    
    if ("LootboxManagerLootbox".equalsIgnoreCase(className)) {
      return new TypeToken<LootboxManagerLootbox>(){}.getType();
    }
    
    if ("LootboxManagerModel".equalsIgnoreCase(className)) {
      return new TypeToken<LootboxManagerModel>(){}.getType();
    }
    
    if ("MintCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<MintCollectionItemRequest>(){}.getType();
    }
    
    if ("MintCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<MintCurrencyRequest>(){}.getType();
    }
    
    if ("PlayerModel".equalsIgnoreCase(className)) {
      return new TypeToken<PlayerModel>(){}.getType();
    }
    
    if ("ProfileModel".equalsIgnoreCase(className)) {
      return new TypeToken<ProfileModel>(){}.getType();
    }
    
    if ("ProfilePermissionsValue".equalsIgnoreCase(className)) {
      return new TypeToken<ProfilePermissionsValue>(){}.getType();
    }
    
    if ("PublicEcosystem".equalsIgnoreCase(className)) {
      return new TypeToken<PublicEcosystem>(){}.getType();
    }
    
    if ("PublicGame".equalsIgnoreCase(className)) {
      return new TypeToken<PublicGame>(){}.getType();
    }
    
    if ("PublicPlayer".equalsIgnoreCase(className)) {
      return new TypeToken<PublicPlayer>(){}.getType();
    }
    
    if ("PublicPlayerCustodialWallet".equalsIgnoreCase(className)) {
      return new TypeToken<PublicPlayerCustodialWallet>(){}.getType();
    }
    
    if ("PublicProfile".equalsIgnoreCase(className)) {
      return new TypeToken<PublicProfile>(){}.getType();
    }
    
    if ("RemovePlayerConnectedWalletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<RemovePlayerConnectedWalletRequest>(){}.getType();
    }
    
    if ("RevokeCollectionRoleRequest".equalsIgnoreCase(className)) {
      return new TypeToken<RevokeCollectionRoleRequest>(){}.getType();
    }
    
    if ("SetCollectionApprovalRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetCollectionApprovalRequest>(){}.getType();
    }
    
    if ("SetCollectionItemTimelockRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetCollectionItemTimelockRequest>(){}.getType();
    }
    
    if ("SetCurrencyFeesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetCurrencyFeesRequest>(){}.getType();
    }
    
    if ("SetLootboxManagerLootboxRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetLootboxManagerLootboxRequest>(){}.getType();
    }
    
    if ("SetPlayerConnectedWallet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<SetPlayerConnectedWallet200Response>(){}.getType();
    }
    
    if ("SetPlayerConnectedWalletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetPlayerConnectedWalletRequest>(){}.getType();
    }
    
    if ("SetPlayerDataRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetPlayerDataRequest>(){}.getType();
    }
    
    if ("SetShopOfferRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetShopOfferRequest>(){}.getType();
    }
    
    if ("ShopModel".equalsIgnoreCase(className)) {
      return new TypeToken<ShopModel>(){}.getType();
    }
    
    if ("ShopOffer".equalsIgnoreCase(className)) {
      return new TypeToken<ShopOffer>(){}.getType();
    }
    
    if ("TransactionModel".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionModel>(){}.getType();
    }
    
    if ("TransferCollectionItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<TransferCollectionItemRequest>(){}.getType();
    }
    
    if ("TransferContractOwnershipRequest".equalsIgnoreCase(className)) {
      return new TypeToken<TransferContractOwnershipRequest>(){}.getType();
    }
    
    if ("TransferCurrencyRequest".equalsIgnoreCase(className)) {
      return new TypeToken<TransferCurrencyRequest>(){}.getType();
    }
    
    if ("UpdateEcosystemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateEcosystemRequest>(){}.getType();
    }
    
    if ("UpdateGame200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGame200Response>(){}.getType();
    }
    
    if ("UpdateGame200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGame200ResponseAllOf>(){}.getType();
    }
    
    if ("UpdateGameRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGameRequest>(){}.getType();
    }
    
    if ("UpdatePlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePlayer200Response>(){}.getType();
    }
    
    if ("UpdatePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePlayerRequest>(){}.getType();
    }
    
    if ("UpdateProfilePlayer200Response".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateProfilePlayer200Response>(){}.getType();
    }
    
    if ("UpdateProfilePlayer200ResponseAllOf".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateProfilePlayer200ResponseAllOf>(){}.getType();
    }
    
    if ("UpdateProfilePlayerRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateProfilePlayerRequest>(){}.getType();
    }
    
    if ("UpdateProfileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateProfileRequest>(){}.getType();
    }
    
    if ("UpgradeContractTrustedForwarderRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpgradeContractTrustedForwarderRequest>(){}.getType();
    }
    
    if ("WalletModel".equalsIgnoreCase(className)) {
      return new TypeToken<WalletModel>(){}.getType();
    }
    
    if ("WithdrawFromShopRequest".equalsIgnoreCase(className)) {
      return new TypeToken<WithdrawFromShopRequest>(){}.getType();
    }
    
    if ("WriteContractRequest".equalsIgnoreCase(className)) {
      return new TypeToken<WriteContractRequest>(){}.getType();
    }
    
    if ("WriteContractRequestArgsInner".equalsIgnoreCase(className)) {
      return new TypeToken<WriteContractRequestArgsInner>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
